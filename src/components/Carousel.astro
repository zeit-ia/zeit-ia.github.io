---

---

<div class="relative flex items-center justify-between">
  <div class="flex-grow overflow-x-auto">
    <div
      id="carouselItemsContainer"
      class="grid grid-cols-2 grid-rows-2 md:grid-cols-4 md:grid-rows-1 gap-4"
      style="min-height: 420px;"
    >
      <slot />
    </div>
  </div>
</div>

<div class="flex items-center justify-around mt-6 space-x-4">
  <button
    id="prevButton"
    class="p-2 bg-white rounded-full transform active:scale-75 transition-transform"
    aria-label="Previous items"
    style="visibility: hidden;"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-5 w-5"
      fill="none"
      viewBox="0 0 24 24"
      stroke="#000"
      stroke-width="2"
    >
      <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7"
      ></path>
    </svg>
  </button>
  <div id="paginationDots" class="flex justify-center space-x-2">
    {/* Dots will be generated by JavaScript */}
  </div>
  <button
    id="nextButton"
    class="p-2 bg-white rounded-full transform active:scale-75 transition-transform"
    aria-label="Next items"
    style="visibility: visible;"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-5 w-5"
      fill="none"
      viewBox="0 0 24 24"
      stroke="#000"
      stroke-width="2"
    >
      <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"
      ></path>
    </svg>
  </button>
</div>

<script>
  const carouselItemsContainer = document.getElementById(
    "carouselItemsContainer",
  )!;
  const prevButton = document.getElementById("prevButton") as HTMLButtonElement;
  const nextButton = document.getElementById("nextButton") as HTMLButtonElement;
  const paginationDotsContainer = document.getElementById(
    "paginationDots",
  ) as HTMLDivElement;

  const cards = carouselItemsContainer.children;
  const itemsPerPage = 4;
  const totalPages = Math.ceil(cards.length / itemsPerPage);
  const animationSpeed = 300;

  let currentPage = 0;

  for (let i = 0; i < cards.length; i++) {
    const cardClasses = cards[i]!.classList;
    cardClasses.add(
      "transition-opacity",
      `duratiom-${animationSpeed}`,
      "ease-in-out",
      "flex",
      "flex-col",
    );
    if (i >= itemsPerPage) {
      cardClasses.add("hidden");
    }
  }

  function updateVisibleCards() {
    for (let idx = 0; idx < cards.length; idx++) {
      const cardClasses = cards[idx]!.classList;
      const pageStart = currentPage * itemsPerPage;
      const pageEnd = pageStart + itemsPerPage;
      if (idx >= pageStart && idx < pageEnd) {
        setTimeout(() => {
          cardClasses.remove("hidden");
        }, animationSpeed);
      } else {
        cardClasses.add("opacity-0");
        setTimeout(() => {
          cardClasses.add("hidden");
          cardClasses.remove("opacity-0");
        }, animationSpeed);
      }
    }
  }

  const updatePaginationDots = () => {
    paginationDotsContainer.innerHTML = "";
    for (let i = 0; i < totalPages; i++) {
      const dotButton = document.createElement("button");
      dotButton.classList.add("h-3", "rounded-full");
      // FIXME: internacionalizacao
      dotButton.setAttribute("aria-label", `Go to page ${i + 1}`);
      if (currentPage === i) {
        dotButton.classList.add("bg-accent-one", "w-6");
      } else {
        dotButton.classList.add("bg-background", "w-3");
      }
      dotButton.addEventListener("click", () => {
        currentPage = i;
        updateCarousel();
      });
      paginationDotsContainer.appendChild(dotButton);
    }
  };

  function updateArrows() {
    prevButton.style.visibility = currentPage === 0 ? "hidden" : "visible";
    nextButton.style.display =
      currentPage === totalPages - 1 ? "hidden" : "visible";
  }

  const updateCarousel = () => {
    updateVisibleCards();
    updatePaginationDots();
    updateArrows();
  };

  document.addEventListener("DOMContentLoaded", () => {
    prevButton.addEventListener("click", () => {
      if (currentPage > 0) {
        currentPage--;
        updateCarousel();
      }
    });
    nextButton.addEventListener("click", () => {
      if (currentPage < totalPages - 1) {
        currentPage++;
        updateCarousel();
      }
    });

    updateCarousel();
  });
</script>
